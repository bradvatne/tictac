{"version":3,"sources":["Box.js","Board.js","App.js","index.js"],"names":["Box","props","_useState","useState","_useState2","Object","slicedToArray","status","setStatus","id","boardState","handleClick","react_default","a","createElement","className","onClick","player","Board","setBoardState","objectSpread","console","log","boxes","toConsumableArray","Array","map","item","index","src_Box","key","react","App","ReactDOM","render","src_App","document","getElementById"],"mappings":"sLAwBeA,EArBH,SAAAC,GAAS,IAAAC,EAESC,mBAAS,IAFlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEZK,EAFYH,EAAA,GAEJI,EAFIJ,EAAA,GAKXK,EAAgCR,EAAhCQ,GAAIC,EAA4BT,EAA5BS,WAAYC,EAAgBV,EAAhBU,YASxB,OACEC,EAAAC,EAAAC,cAAA,OAAKL,GAAIA,EAAIM,UAAU,MAAMC,QAAS,kBANtCL,SACAD,EAAWO,OAAST,EAAU,KAAOA,EAAU,QAM7CI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUR,KChBhB,SAASW,IAAQ,IAAAhB,EAGMC,mBAAS,CAC3Cc,QAAQ,IAJoBb,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGvBQ,EAHuBN,EAAA,GAGXe,EAHWf,EAAA,GAQtBa,EAAWP,EAAXO,OAIFN,EAAc,WAClBQ,EAAcd,OAAAe,EAAA,EAAAf,CAAA,GAAKK,EAAN,CAAkBO,QAASA,KACxCI,QAAQC,IAAIC,IAMRA,EAAQlB,OAAAmB,EAAA,EAAAnB,CAAIoB,MAAM,IAAIC,IAAI,SAACC,EAAMC,GAAP,OAC9BhB,EAAAC,EAAAC,cAACe,EAAD,CACEC,IAAKF,EACLnB,GAAImB,EACJlB,WAAYA,EACZC,YAAaA,MAMjB,OACEC,EAAAC,EAAAC,cAACiB,EAAA,SAAD,KACEnB,EAAAC,EAAAC,cAAA,6BAAqBG,EAAS,IAAM,KACpCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASQ,ICjC9B,IASeS,EATH,WACV,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACI,EAAD,QCHNe,IAASC,OAAOtB,EAAAC,EAAAC,cAACqB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.721a2521.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\n//individual boxes which are rendered by map\nconst Box = props => {\n  //box state determines the value it displays (x or o)\n  const [status, setStatus] = useState(\"\");\n\n  //destructure props for easier accesss\n  const { id, boardState, handleClick } = props;\n\n  //onClick function to update parent state (change player) and update this component's state (x or o value)\n  function onClick() {\n    handleClick();\n    boardState.player ? setStatus(\"X\") : setStatus(\"O\");\n  }\n\n  //renders a div using props\n  return (\n    <div id={id} className=\"box\" onClick={() => onClick()}>\n      <div className=\"status\">{status}</div>\n    </div>\n  );\n};\n\nexport default Box;\n","import React, { Fragment, useState } from \"react\";\nimport Box from \"./Box\";\n\nexport default function Board() {\n    \n  //board state holds player turn\n  const [boardState, setBoardState] = useState({\n    player: false\n  });\n\n  //deconstructing player from boardState prop\n  const { player } = boardState;\n\n\n  //this function will be passed down to children to update state\n  const handleClick = () => {\n    setBoardState({ ...boardState, player: !player });\n    console.log(boxes)\n  };\n\n  //generating board boxes by mapping an empty array of length 9 (9 board spots)\n  //passing down boardState for state access\n  //passing down handleClick to provide a way to alter parent state\n  const boxes = [...Array(9)].map((item, index) => (\n    <Box\n      key={index}\n      id={index}\n      boardState={boardState}\n      handleClick={handleClick}\n    />\n  ));\n\n\n  //Renders the boxes in the board with a grid of 3x3\n  return (\n    <Fragment>\n      <h2>Current Player: {player ? \"X\" : \"O\"}</h2>\n      <div className=\"board\">{boxes}</div>\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport Board from \"./Board\";\n\n//container for the app\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <h1>Tic-Tac-Toe</h1>\n      <Board />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}